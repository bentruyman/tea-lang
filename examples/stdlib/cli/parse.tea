use cli = "support.cli"
use debug = "std.debug"
use util = "std.util"

# Demonstrates parsing CLI arguments using support.cli
var spec = {
  name: "tea-sample",
  description: "Demo CLI parser",
  options: [
    { name: "verbose", aliases: ["-v", "--verbose"], kind: "flag" },
    { name: "count", aliases: ["-c", "--count"], kind: "option", type: "Int", default: 1 }
  ],
  positionals: [
    { name: "input", type: "String", required: true }
  ],
  subcommands: []
}

# Parse either supplied arguments or a demo set when run without CLI args
var argv = cli.args()

if util.len(argv) == 0
  argv = ["--count", "3", "--verbose", "input.txt"]
end

var parsed = cli.parse(spec, argv)

if parsed.ok
  debug.print("command:")
  debug.print(parsed.command)
  debug.print("- verbose:")
  debug.print(util.to_string(parsed.options["verbose"]))
  debug.print("- count:")
  debug.print(util.to_string(parsed.options["count"]))
  debug.print("- input:")
  debug.print(parsed.positionals["input"])
else
  debug.print(parsed.message)
  debug.print(parsed.help)
end
